# Use an official Node.js runtime as a parent image
# Use a specific LTS version for stability (e.g., Node 20)
FROM node:20-alpine

# Set the working directory in the container
WORKDIR /app

# Copy package.json and package-lock.json (or yarn.lock or pnpm-lock.yaml)
# Copying these first leverages Docker cache
COPY package*.json ./

# Install app dependencies
# Use --only=production if you don't need devDependencies in the final image
# Or use 'npm ci' for faster, more reliable installs based on package-lock.json
RUN npm ci --only=production

# Bundle app source
COPY . .

# Make port 3000 available to the world outside this container
# Replace 3000 with the actual port your application uses if different
EXPOSE 3000

# Define environment variables if needed
# ENV NODE_ENV=production

# Run server.js when the container launches
CMD [ "node", "server.js" ]