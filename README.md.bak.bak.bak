## Running with Docker

You can run the entire Exam Buddy project using Docker and Docker Compose. This setup ensures consistent environments for both the frontend (client) and backend (server), as well as the MongoDB database.

### Requirements
- Docker and Docker Compose installed on your system
- Node.js version `22.13.1` is used in both client and server Dockerfiles (handled automatically by Docker)

### Environment Variables
- The server requires a `.env` file in `./server/` (see `server/.env.example` for reference)
- The client can use an env file if needed (uncomment the `env_file` line in the compose file and provide `client/.env`)

### Build and Run
1. Make sure your environment variables are set up as described above.
2. From the project root, run:
   ```bash
   docker compose up --build
   ```
   This will build and start the following services:
   - **js-client** (React frontend)
   - **js-server** (Node.js/Express backend)
   - **mongo** (MongoDB database)

### Ports
- **Frontend (js-client):** [http://localhost:5173](http://localhost:5173)
- **Backend API (js-server):** [http://localhost:5000](http://localhost:5000)
- **MongoDB:** `localhost:27017` (exposed for local development)

### Special Configuration
- The Docker Compose file creates a custom network (`exam-buddy-net`) for service communication.
- MongoDB data is not persisted by default. To enable persistence, uncomment the `volumes` section for `mongo` in the compose file.
- The client uses Vite's preview server for production preview.
- Both client and server run as non-root users inside their containers for improved security.

For any changes to environment variables or dependencies, rebuild the containers with `docker compose up --build`.
